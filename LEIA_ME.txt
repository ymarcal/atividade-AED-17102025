================================================================================
  SCRIPTS DE AUTOMA√á√ÉO - ESTUDO PARAM√âTRICO CAMADA LIMITE LAMINAR
  Disciplina: AED-26 (ITA)
  Data: Outubro 2025
================================================================================

üì¶ ARQUIVOS CRIADOS
================================================================================

1. find_executables.py       - Localiza GMSH e SU2 no sistema
2. generate_meshes.py         - Gera malhas parametricamente
3. run_su2_batch.py           - Executa SU2 para m√∫ltiplas malhas
4. run_parametric_study.py    - Workflow completo (RECOMENDADO)
5. analyze_results.py         - Analisa e compara resultados

6. requirements.txt           - Depend√™ncias Python
7. README_scripts.md          - Documenta√ß√£o completa
8. WORKFLOW_GUIDE.md          - Guia de workflow e casos de uso
9. LEIA_ME.txt               - Este arquivo (resumo)

================================================================================
üöÄ IN√çCIO R√ÅPIDO (4 PASSOS)
================================================================================

PASSO 1: Localizar execut√°veis
-------------------------------
> python find_executables.py

  Isso vai procurar GMSH e SU2 no seu computador.
  Copie os caminhos fornecidos.


PASSO 2: Ajustar caminhos (se necess√°rio)
------------------------------------------
  Edite os arquivos Python e cole os caminhos:
  
  - generate_meshes.py (linha ~13)
  - run_su2_batch.py (linha ~13)
  - run_parametric_study.py (linhas ~23-24)
  
  Exemplo:
    GMSH_PATH = r"C:\Program Files\gmsh-4.11.1-Windows64\gmsh.exe"
    SU2_PATH = r"C:\Users\ymarc\OneDrive\Documents\SU2-v8.3.0-win64\win64\bin\SU2_CFD.exe"


PASSO 3: Executar estudo param√©trico
-------------------------------------
> python run_parametric_study.py

  Escolha o que voc√™ quer variar:
  1. d_inlet (dist√¢ncia do inlet)
  2. H_dom (altura do dom√≠nio)
  3. Ambos (matriz completa)
  4. Definir manualmente
  
  O script vai:
  - Gerar as malhas no GMSH
  - Executar SU2 para cada caso
  - Organizar os resultados


PASSO 4: Analisar resultados
-----------------------------
> pip install matplotlib pandas
> python analyze_results.py

  Escolha:
  1. Gr√°ficos individuais
  2. Compara√ß√£o por d_inlet
  3. Compara√ß√£o por H_dom
  4. Tabela resumo
  5. Tudo (recomendado)

================================================================================
üìä ARQUIVOS DE SA√çDA
================================================================================

Malhas Geradas:
  mesh_d002_H03.su2, mesh_d004_H03.su2, ...

Resultados SU2:
  flow_d002_H03.vtu          - Campos (abrir no VISIT)
  surface_flow_d002_H03.vtu  - Superf√≠cie
  history_d002_H03.csv       - Converg√™ncia
  restart_flow_d002_H03.dat  - Restart

An√°lises:
  convergence_d002_H03.png   - Gr√°ficos de converg√™ncia
  comparison_d_inlet.png     - Compara√ß√£o por d_inlet
  comparison_H_dom.png       - Compara√ß√£o por H_dom
  summary_results.csv        - Tabela com Cd e Cl

================================================================================
üìö DOCUMENTA√á√ÉO
================================================================================

README_scripts.md    - Documenta√ß√£o detalhada de cada script
WORKFLOW_GUIDE.md    - Guia com exemplos e casos de uso
                      (Leia para entender todo o processo!)

================================================================================
‚è±Ô∏è TEMPO ESTIMADO
================================================================================

Por simula√ß√£o:    5-15 minutos (depende do computador)
8 casos:          ~1-2 horas
12 casos:         ~1.5-3 horas

DICA: Execute overnight para estudos grandes!

================================================================================
üéØ OBJETIVOS DO ESTUDO
================================================================================

1. Verificar independ√™ncia da solu√ß√£o com d_inlet
   ‚Üí Solu√ß√£o n√£o deve depender da dist√¢ncia do inlet

2. Verificar independ√™ncia da solu√ß√£o com H_dom
   ‚Üí Solu√ß√£o n√£o deve depender da altura do dom√≠nio

3. Comparar Cd num√©rico com teoria de Blasius
   ‚Üí Cf = 0.664 / ‚àö(Re_x)

4. Estudar distribui√ß√£o de press√£o na linha de simetria

================================================================================
üí° DICAS
================================================================================

‚úì Comece com 2-3 casos para testar
‚úì Verifique converg√™ncia nos arquivos .csv
‚úì Compare com teoria de Blasius
‚úì Organize resultados em pastas
‚úì Fa√ßa backup dos arquivos importantes

================================================================================
üêõ PROBLEMAS COMUNS
================================================================================

"GMSH n√£o encontrado"
‚Üí Baixe em: https://gmsh.info/#Download
‚Üí Execute find_executables.py novamente

"SU2 n√£o encontrado"
‚Üí Baixe em: https://su2code.github.io/download.html
‚Üí Corrija o caminho no script

"Simula√ß√£o n√£o converge"
‚Üí Aumente ITER no lam_flatplate.cfg
‚Üí Refine a malha no placa_mod.geo

"Falta matplotlib ou pandas"
‚Üí pip install matplotlib pandas

================================================================================
üìñ EXEMPLO DE USO COMPLETO
================================================================================

# 1. Localizar execut√°veis
> python find_executables.py
  [Copiar caminhos]

# 2. Executar estudo variando d_inlet
> python run_parametric_study.py
  Op√ß√£o: 1
  Valores padr√£o: s
  Iniciar: s
  [Aguardar ~1-2 horas]

# 3. Analisar resultados
> pip install matplotlib pandas
> python analyze_results.py
  Op√ß√£o: 5 (an√°lise completa)

# 4. Visualizar no VISIT
> Abrir flow_d016_H03.vtu
> Add ‚Üí Pseudocolor ‚Üí Velocity
> Add ‚Üí Vector ‚Üí Velocity_
> Draw

# 5. Verificar converg√™ncia
> Abrir history_d016_H03.csv no Excel
> Plotar coluna "rms_Density" vs "Inner_Iter"

================================================================================
‚úÖ CHECKLIST
================================================================================

Antes de come√ßar:
[ ] Python instalado
[ ] GMSH instalado
[ ] SU2 instalado
[ ] lam_flatplate.cfg presente
[ ] placa_mod.geo presente
[ ] Espa√ßo em disco (~100 MB por caso)

Durante execu√ß√£o:
[ ] Monitorar terminal por erros
[ ] Verificar converg√™ncia

Ap√≥s execu√ß√£o:
[ ] Arquivos .vtu gerados
[ ] Arquivos .csv com dados
[ ] Gr√°ficos .png criados
[ ] Comparar com teoria

================================================================================
üìû SUPORTE
================================================================================

Documenta√ß√£o SU2:   https://su2code.github.io/docs_v7/home/
Documenta√ß√£o GMSH:  https://gmsh.info/doc/texinfo/gmsh.html
Tutorial:           https://su2code.github.io/tutorials/Laminar_Flat_Plate/

================================================================================

Boa sorte com suas simula√ß√µes! üöÄ

Para come√ßar agora: python find_executables.py

================================================================================


